name: Update Bounties

on:
  schedule:
    - cron: '0 */12 * * *'  # Run every 12 hours
  push:
    branches: [ update ]
  workflow_dispatch:  # Allow manual trigger

jobs:
  update-bounties:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests colorama tabulate pathlib
      
      - name: Run bounty finder
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FORCE_REFRESH: "true"
        run: |
          # Run bounty finder directly, bypassing run.py's .env check
          # This works because BountyConfig checks for GITHUB_TOKEN env var first
          python -m src.bounty_finder

      - name: Commit and push if changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data/ README.md
          git diff --quiet && git diff --staged --quiet || git commit -m "Update bounties: $(date +'%Y-%m-%d %H:%M')"
          git push

  validate-bounties:
    runs-on: ubuntu-latest
    needs: update-bounties
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests colorama tabulate pathlib
      
      - name: Run validation
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python tests/run_bounty_check.py
